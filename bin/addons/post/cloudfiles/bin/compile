#!/usr/bin/env bash

echo "Building cloudfiles"

addon_bin=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cwd_cache=$PWD
cd $BUILD_DIR

# Env is already active
if [ -n "$RACKSPACE_CDN_CONTAINER_PREFIX" ]; then
    
    # Create prefixes
    static_suffix=$(echo -n "$(date "+%s")" | md5sum | awk '{print $1}')

    # Generate container-locations
    export RACKSPACE_MEDIA_CONTAINER="$RACKSPACE_CDN_CONTAINER_PREFIX-media"
    export RACKSPACE_CDN_CONTAINER_STATIC_PREFIX="$RACKSPACE_CDN_CONTAINER_PREFIX-static"
    export RACKSPACE_CDN_CONTAINER_STATIC_KEEP_NUM=${RACKSPACE_CDN_CONTAINER_STATIC_KEEP_NUM:-2}
    export RACKSPACE_CDN_CONTAINER_STATIC_MIN_AGE=${RACKSPACE_CDN_CONTAINER_STATIC_MIN_AGE:-604800}
    export RACKSPACE_STATIC_CONTAINER="$RACKSPACE_CDN_CONTAINER_STATIC_PREFIX-$static_suffix"
    echo "export RACKSPACE_MEDIA_CONTAINER=$RACKSPACE_MEDIA_CONTAINER" > $BUILD_DIR/.profile.d/cloudfiles.sh
    echo "export RACKSPACE_STATIC_CONTAINER=$RACKSPACE_STATIC_CONTAINER" >> $BUILD_DIR/.profile.d/cloudfiles.sh

    # Create buckets
    project/manage.py container_create $RACKSPACE_MEDIA_CONTAINER --settings=$DJANGO_SETTINGS_MODULE
    project/manage.py container_create $RACKSPACE_STATIC_CONTAINER --settings=$DJANGO_SETTINGS_MODULE 

    # Populate static bucket
    export ASSETS_BUILD_DIR_FULL=$BUILD_DIR/$ASSETS_BUILD_DIR
    project/manage.py collectstatic --settings=$DJANGO_SETTINGS_MODULE --noinput 

    # Link domain alias for media and static (Get own spam reputation)
    if [[ -n "$RACKSPACE_CDN_ALIAS_DOMAIN" ]]; then
        echo "Linking STATIC and MEDIA to clean(er) uri's"
        media_hash=$(echo "$RACKSPACE_MEDIA_CONTAINER" | md5sum | awk '{print $1}')
        static_hash=$(echo "$RACKSPACE_STATIC_CONTAINER" | md5sum | awk '{print $1}')

        media_subdomain="media-$media_hash"
        static_subdomain="static-$static_hash"

        if [[ -n "$RACKSPACE_CDN_ALIAS_PREFIX" ]]; then
            media_subdomain="$media_subdomain.$RACKSPACE_CDN_ALIAS_PREFIX"
            static_subdomain="$static_subdomain.$RACKSPACE_CDN_ALIAS_PREFIX"
        fi

        export RACKSPACE_CDN_ALIAS_MEDIA="$media_subdomain.$RACKSPACE_CDN_ALIAS_DOMAIN"
        export RACKSPACE_CDN_ALIAS_STATIC="$static_subdomain.$RACKSPACE_CDN_ALIAS_DOMAIN"
        echo "export RACKSPACE_CDN_ALIAS_MEDIA=$RACKSPACE_CDN_ALIAS_MEDIA" >> $BUILD_DIR/.profile.d/cloudfiles.sh
        echo "export RACKSPACE_CDN_ALIAS_STATIC=$RACKSPACE_CDN_ALIAS_STATIC" >> $BUILD_DIR/.profile.d/cloudfiles.sh

        $addon_bin/link-domain $RACKSPACE_MEDIA_CONTAINER $RACKSPACE_CDN_ALIAS_MEDIA
        $addon_bin/link-domain $RACKSPACE_STATIC_CONTAINER $RACKSPACE_CDN_ALIAS_STATIC

        if [[ -n "$RACKSPACE_CDN_ALIAS_STATIC_PERSISTENT_PREFIX" ]]; then
            export RACKSPACE_CDN_ALIAS_STATIC_PERSISTENT_DOMAIN="$RACKSPACE_CDN_ALIAS_STATIC_PERSISTENT_PREFIX.$RACKSPACE_CDN_ALIAS_DOMAIN"
            # (Re-) link
            $addon_bin/link-domain $RACKSPACE_STATIC_CONTAINER $RACKSPACE_CDN_ALIAS_STATIC_PERSISTENT_DOMAIN true
            echo "export RACKSPACE_CDN_ALIAS_STATIC_PERSISTENT_DOMAIN=$RACKSPACE_CDN_ALIAS_STATIC_PERSISTENT_DOMAIN" >> $BUILD_DIR/.profile.d/cloudfiles.sh
        fi
    fi
    
    # Cleanup old buckets, and linkage
    $addon_bin/delete-containers
    
fi

cd $cwd_cache
